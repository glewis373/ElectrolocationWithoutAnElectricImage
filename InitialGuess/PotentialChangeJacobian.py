import numpy as np

def Df(x,r,del_phi):

#    eps_w = 80.1
#    eps_o = 2.25
#    a = 1.0

#    Gamma = (eps_o-eps_w)/(eps_o+2.0*eps_w) #-0.4792244
#    gamma = Gamma * a**3

#    gamma = 1.0


    Ex1 = x[0]
    Ey1 = x[1]
    Ex2 = x[2]
    Ey2 = x[3]
    Ez1 = x[4]
    Ez2 = x[5]
    x01 = x[6]
    y01 = x[7]
    z01 = x[8]
    x02 = x[9]
    y02 = x[10]
    z02 = x[11]

    Nr = r.shape[0]
    
    Jac = np.zeros((Nr,12))

    # Ex1
    for jj in range(0,Nr):
        # Ex1
        Jac[jj,0] = -((x01-r[jj][0])/
                               ((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2)**(3/2))
        # Ey1 
        Jac[jj,1] = -((y01-r[jj][1])/
                               ((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2)**(3/2))
        
        # Ex2
        Jac[jj,2] = ((x02-r[jj][0])/
                               ((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2)**(3/2))
        
        # Ey2
        Jac[jj,3] = ((y02-r[jj][1])/
                               ((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2)**(3/2))
        
        # Ez1 
        Jac[jj,4] = -(z01/((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2)**(3/2))
        
        # Ez2
        Jac[jj,5] = (z02/((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2)**(3/2))

        # x01
        Jac[jj,6] = ((3*(x01-r[jj][0])*
                               (Ex1*(x01-r[jj][0])+Ey1*(y01-r[jj][1])+Ez1*z01)-
                               Ex1*((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2))/
                               ((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2)**(5/2))
     
        # y01
        Jac[jj,7] = ((3*(y01-r[jj][1])*
                               (Ex1*(x01-r[jj][0])+Ey1*(y01-r[jj][1])+Ez1*z01)-
                               Ey1*((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2))/
                               ((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2)**(5/2))
        
        # z01
        Jac[jj,8] = ((3*z01*(Ex1*(x01-r[jj][0])+Ey1*(y01-r[jj][1])+Ez1*z01)-
                               Ez1*((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2))/
                               ((x01-r[jj][0])**2+(y01-r[jj][1])**2+z01**2)**(5/2))

        # x02
        Jac[jj,9] = -((3*(x02-r[jj][0])*
                               (Ex2*(x02-r[jj][0])+Ey2*(y02-r[jj][1])+Ez2*z02)-
                               Ex2*((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2))/
                               ((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2)**(5/2))
        
        # y02
        Jac[jj,10] = -((3*(y02-r[jj][1])*
                               (Ex2*(x02-r[jj][0])+Ey2*(y02-r[jj][1])+Ez2*z02)-
                               Ey2*((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2))/
                               ((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2)**(5/2))
        
        # z02
        Jac[jj,11] = -((3*z02*(Ex2*(x02-r[jj][0])+Ey2*(y02-r[jj][1])+Ez2*z02)-
                               Ez2*((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2))/
                               ((x02-r[jj][0])**2+(y02-r[jj][1])**2+z02**2)**(5/2))
        
    return Jac
